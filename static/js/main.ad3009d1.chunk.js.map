{"version":3,"sources":["BooksAPI.js","components/SideMenu.js","components/Loader.js","components/Book.js","components/Message.js","components/BookShelf.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SideMenu","react_default","a","createElement","className","react_router_dom","to","exact","activeClassName","Loader","viewBox","cx","cy","r","fill","strokeWidth","Book","props","imageLinks","style","backgroundImage","thumbnail","onChange","e","onUpdateShelf","target","value","disabled","title","authors","map","author","index","key","EmptyMessage","this","Fragment","ownedBooks","length","React","PureComponent","BookShelf","updateShelf","_this","_this2","filter","components_Book","Message","Search","state","searchedBooks","noResult","updateQuery","setState","debounce","searchBooks","trim","BooksAPI","trimmedBooks","forEach","ownedBook","func","wait","timeId","_len2","arguments","args","Array","_key2","clearTimeout","setTimeout","apply","type","placeholder","BooksApp","showLoader","document","querySelector","display","hideLoader","fetchBooks","components_SideMenu","react_router","path","render","components_BookShelf","components_Search","components_Loader","ReactDOM","basename","src_App","getElementById"],"mappings":"6QAAMA,EAAM,wCAGRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERc,EAAS,SAACC,GAAD,OACpBnB,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEE,YACtBjB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SClBRc,SApBE,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIC,OAAK,EAACC,gBAAgB,WAAtC,cACJP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAWE,gBAAgB,WAAvC,sBACJP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,UAAUE,gBAAgB,WAAtC,iBACJP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,QAAQE,gBAAgB,WAApC,SACJP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,UAAUE,gBAAgB,WAAtC,gBCNGC,EARA,kBACXR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUM,QAAQ,aAC7BT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,OAAOC,YAAY,SCgCrEC,EAnCF,SAACC,GAAD,OACThB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVa,EAAM7B,KAAK8B,WACRjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAae,MAAO,CAAEC,gBAAe,OAAAvC,OAASoC,EAAM7B,KAAK8B,WAAWG,UAA/B,QAEpDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAae,MAAO,CAAEC,gBAAiB,+BAE1DnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UACImB,SAAU,SAAAC,GACNN,EAAMO,cAAcP,EAAM7B,KAAMmC,EAAEE,OAAOC,QAE7CA,MAAOT,EAAM7B,KAAKC,OAClBY,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAOC,UAAQ,GAA7B,cACA1B,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,oBAAd,qBACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,cAAd,gBACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,QAAd,QACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,QAAd,WAIZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAca,EAAM7B,KAAKwC,OACvCX,EAAM7B,KAAKyC,SACRZ,EAAM7B,KAAKyC,QAAQC,IAAI,SAACC,EAAQC,GAAT,OACnB/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAKD,EAAO5B,UAAU,gBAAgB2B,OCiB5CG,mLAlCP,MAAyB,cAArBC,KAAKlB,MAAMW,MAEP3B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,wCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACIH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,wCAKY,WAArBgC,KAAKlB,MAAMW,MAEd3B,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,YAA+B+B,KAAKlB,MAAMoB,WAAWC,OAArD,QAAmG,IAAjCH,KAAKlB,MAAMoB,WAAWC,OAAe,GAAK,IAA5G,sBACArC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,wDAA0EH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,UAK9EL,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAAA,UAAKgC,KAAKlB,MAAMW,OAChB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,2BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,sCAAwDH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAT,qBAjCrDiC,IAAMC,eCoClBC,6MA3BbC,YAAc,SAACtD,EAAMC,GACnBsD,EAAK1B,MAAMO,cAAcpC,EAAMC,4EAGxB,IAAAuD,EAAAT,KACP,OAAIA,KAAKlB,MAAM/B,MAAMoD,QACfH,KAAKlB,MAAM/B,MAAM2D,OAAO,SAAAzD,GAAI,OAAIA,EAAKC,QAAUuD,EAAK3B,MAAM5B,QAAOiD,OAEjErC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACEnC,EAAAC,EAAAC,cAAA,UAAKgC,KAAKlB,MAAMW,OAChB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ+B,KAAKlB,MAAM/B,MACP2D,OAAO,SAAAzD,GAAI,OAAIA,EAAKC,QAAUuD,EAAK3B,MAAM5B,QACzCyC,IAAI,SAAC1C,GAAD,OAAWa,EAAAC,EAAAC,cAAC2C,EAAD,CAAM1D,KAAMA,EAAM6C,IAAK7C,EAAKE,GAAIkC,cAAeoB,EAAKF,kBASxEzC,EAAAC,EAAAC,cAAC4C,EAAD,CAASnB,MAAOO,KAAKlB,MAAMW,eA9BjBW,IAAMC,eCsFfQ,6MA5EXC,MAAQ,CACJlD,MAAO,GACPmD,cAAe,GACfC,UAAU,KAGdT,YAAc,SAACtD,EAAMC,GACjBsD,EAAK1B,MAAMO,cAAcpC,EAAMC,GAC/BD,EAAKC,MAAQA,KAGjB+D,YAAc,SAAC7B,GACXoB,EAAKU,SAAS,CAAEtD,MAAOwB,EAAEE,OAAOC,OAASiB,EAAKW,SAAS,WACnDX,EAAKY,YAAYZ,EAAKM,MAAMlD,MAAMyD,SACnC,SAGPD,YAAc,SAACxD,GACP4C,EAAKM,MAAMlD,MACX0D,EAAgB1D,GAAOjB,KAAK,SAAAI,GACxB,GAAIA,EAAMoD,OAAS,EAAG,CAClB,IAAIoB,EAAexE,EAAM4C,IAAI,SAAA1C,GASzB,OARAuD,EAAK1B,MAAMoB,WAAWsB,QAAQ,SAACC,GACvBxE,EAAKE,KAAOsE,EAAUtE,KACtBF,EAAKC,MAAQuE,EAAUvE,OAEtBD,EAAKC,QACND,EAAKC,MAAQ,UAGdD,IAEXuD,EAAKU,SAAS,CAAEH,cAAeQ,EAAcP,UAAU,SAEvDR,EAAKU,SAAS,CAAEH,cAAe,GAAIC,UAAU,MAIrDR,EAAKU,SAAS,CAAEtD,MAAO,GAAImD,cAAe,GAAIC,UAAU,OAIhEG,SAAW,SAACO,EAAMC,GACd,IAAIC,EAAS,KACb,OAAO,WAAa,QAAAC,EAAAC,UAAA3B,OAAT4B,EAAS,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAATF,EAASE,GAAAH,UAAAG,GACZL,GAASM,aAAaN,GAC1BA,EAASO,WAAW,WAChBT,EAAIU,WAAJ,EAAQL,IACTJ,6EAIF,IAAAlB,EAAAT,KACL,OACIlC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SACIqE,KAAK,OACLC,YAAY,mBACZ/C,MAAOS,KAAKc,MAAMlD,MAClBuB,SAAU,SAACC,GAAD,OAAOqB,EAAKQ,YAAY7B,OAG1CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACT+B,KAAKc,MAAMC,eAAiBf,KAAKc,MAAMlD,OACrCoC,KAAKc,MAAMC,cAAcpB,IAAI,SAAA1C,GAAI,OAAKa,EAAAC,EAAAC,cAAC2C,EAAD,CAAM1D,KAAMA,EAAM6C,IAAK7C,EAAKE,GAAIkC,cAAeoB,EAAKF,gBAE7FP,KAAKc,MAAME,UAAalD,EAAAC,EAAAC,cAAC4C,EAAD,CAASnB,MAAM,eACtCO,KAAKc,MAAMlD,OAAUE,EAAAC,EAAAC,cAAC4C,EAAD,CAASnB,MAAM,SAASS,WAAYF,KAAKlB,MAAMoB,sBA9ErEE,IAAMC,eCiEZkC,6MA7DbzB,MAAQ,CACN/D,MAAO,MAOTyF,WAAa,WACXC,SAASC,cAAc,WAAW1D,MAAM2D,QAAU,UAGpDC,WAAa,WACXH,SAASC,cAAc,WAAW1D,MAAM2D,QAAU,UAGpDE,WAAa,WACXvB,IAAkB3E,KAAK,SAACI,GACtByD,EAAKU,SAAS,CAAEnE,UAChByD,EAAKoC,kBAITrC,YAAc,SAACtD,EAAMC,GACnBsD,EAAKgC,aACLlB,EAAgBrE,EAAMC,GAAOP,KAAK,WAChC6D,EAAKqC,mGArBP7C,KAAK6C,8CAyBE,IAAApC,EAAAT,KACP,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8E,EAAD,MACAhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAO3E,OAAK,EAAC4E,KAAK,IAAIC,OAAQ,kBAC5BnF,EAAAC,EAAAC,cAACF,EAAAC,EAAMkC,SAAP,KACEnC,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,oBAAoBvC,MAAM,mBAAmBH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,cAC3GzC,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,eAAevC,MAAM,aAAaH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,cAChGzC,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,OAAOvC,MAAM,OAAOH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,kBAGtFzC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAQ,kBAC7BnF,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,oBAAoBvC,MAAM,mBAAmBH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,iBAE7GzC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAQ,kBAC5BnF,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,eAAevC,MAAM,aAAaH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,iBAElGzC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAQ,kBAC1BnF,EAAAC,EAAAC,cAACkF,EAAD,CAAWzD,MAAM,OAAOvC,MAAM,OAAOH,MAAO0D,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,iBAEpFzC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAQ,kBAC5BnF,EAAAC,EAAAC,cAACmF,EAAD,CAAQjD,WAAYO,EAAKK,MAAM/D,MAAOsC,cAAeoB,EAAKF,iBAE5DzC,EAAAC,EAAAC,cAACoF,EAAD,eAvDahD,IAAMC,qBCH7BgD,IAASJ,OACLnF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAeoF,SAAS,oBAAmBxF,EAAAC,EAAAC,cAACuF,EAAD,OAC3Cd,SAASe,eAAe","file":"static/js/main.ad3009d1.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SideMenu = () => (\r\n    <div className=\"side-content\">\r\n    <div className=\"logo\">\r\n      <div className=\"overlay\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n    </div>\r\n    <div className=\"menu\">\r\n      <h3>BROWSE</h3>\r\n      <ul>\r\n        <li><NavLink to=\"/\" exact activeClassName=\"current\" >All Books</NavLink></li>\r\n        <li><NavLink to=\"/reading\" activeClassName=\"current\" >Currently Reading</NavLink></li>\r\n        <li><NavLink to=\"/toread\" activeClassName=\"current\" >Want to Read</NavLink></li>\r\n        <li><NavLink to=\"/read\" activeClassName=\"current\" >Read</NavLink></li>\r\n        <li><NavLink to=\"/search\" activeClassName=\"current\" >Search</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default SideMenu;\r\n","// loader from: https://codepen.io/supah/pen/BjYLdW\r\nimport React from 'react';\r\n\r\nconst Loader = () => (\r\n    <div className=\"loader\">\r\n        <svg className=\"spinner\" viewBox=\"0 0 50 50\">\r\n            <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\"></circle>\r\n        </svg>\r\n    </div>\r\n)\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Book = (props) => (\r\n    <div className=\"book\">\r\n        <div className=\"book-top\">\r\n            {props.book.imageLinks ? (\r\n                <div className=\"book-cover\" style={{ backgroundImage: `url(${props.book.imageLinks.thumbnail})` }}></div>\r\n            ) : ( // if book has no image then give it a missing thumbnail image\r\n                <div className=\"book-cover\" style={{ backgroundImage: 'url(missingThumbnail.jpg)' }}></div>\r\n            )}\r\n            <div className=\"book-shelf-changer\">\r\n                <select\r\n                    onChange={e => {\r\n                        props.onUpdateShelf(props.book, e.target.value)\r\n                    }}\r\n                    value={props.book.shelf}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div className=\"book-title\">{props.book.title}</div>\r\n        {props.book.authors &&\r\n            props.book.authors.map((author, index) => (\r\n                <div key={index} className=\"book-authors\">{author}</div>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nBook.propTypes= {\r\n    book: PropTypes.object.isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass EmptyMessage extends React.PureComponent {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        ownedBooks: PropTypes.arrayOf(PropTypes.object)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.title === 'noResults') {\r\n            return  (\r\n                <React.Fragment>\r\n                    <div className=\"warning\">Your search did not match any books.</div>\r\n                    <div className=\"suggestions\">Suggestions:\r\n                        <ul>\r\n                            <li>Make sure all words are spelled correctly.</li>\r\n                            <li>Try more general keywords.</li>\r\n                            <li>Try different keywords.</li>\r\n                        </ul>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.props.title === 'search') {\r\n            return (\r\n                <React.Fragment>\r\n                    <p className=\"empty\">You have {this.props.ownedBooks.length} book{this.props.ownedBooks.length === 1 ? '' : 's'} in your bookshelf</p>\r\n                    <p className=\"empty\">Get more by searching above! or check your bookshelf <Link to=\"/\">here</Link></p>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <h2>{this.props.title}</h2>\r\n                    <div className=\"bookShelf\">\r\n                        <p className=\"empty\">Your bookshelf is empty</p>\r\n                        <p className=\"empty\">Get started by searching for books <Link to=\"/search\">online!</Link></p>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmptyMessage;\r\n","import React from 'react'\r\nimport Book from './Book'\r\nimport Message from './Message'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BookShelf extends React.PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    shelf: PropTypes.oneOf(['currentlyReading', 'wantToRead', 'read']).isRequired,\r\n    books: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onUpdateShelf: PropTypes.func.isRequired\r\n  }\r\n\r\n  updateShelf = (book, shelf) =>  {\r\n    this.props.onUpdateShelf(book, shelf);\r\n  };\r\n\r\n  render() {\r\n    if (this.props.books.length) {\r\n      if (this.props.books.filter(book => book.shelf === this.props.shelf).length) {\r\n        return (\r\n          <React.Fragment>\r\n            <h2>{this.props.title}</h2>\r\n            <div className=\"bookShelf\">\r\n              {this.props.books\r\n                  .filter(book => book.shelf === this.props.shelf)\r\n                  .map((book) => (<Book book={book} key={book.id} onUpdateShelf={this.updateShelf} />))\r\n              }\r\n            </div>\r\n          </React.Fragment>\r\n        )\r\n      } else {\r\n        return (<Message title={this.props.title} />)\r\n      }\r\n    } else {\r\n      return (<Message title={this.props.title} />)\r\n    }\r\n  }\r\n}\r\n\r\nexport default BookShelf","import React from 'react'\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport Book from './Book'\r\nimport Message from './Message'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Search extends React.PureComponent {\r\n    static propTypes = {\r\n        query: PropTypes.number,\r\n        searchedBooks: PropTypes.array,\r\n        noResult: PropTypes.bool,\r\n        ownedBooks: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n        onUpdateShelf: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        query: '',\r\n        searchedBooks: [],\r\n        noResult: false\r\n    }\r\n\r\n    updateShelf = (book, shelf) =>  {\r\n        this.props.onUpdateShelf(book, shelf);\r\n        book.shelf = shelf;\r\n    };\r\n\r\n    updateQuery = (e) => {\r\n        this.setState({ query: e.target.value }, this.debounce(() => {\r\n            this.searchBooks(this.state.query.trim());\r\n        }, 750));\r\n    };\r\n\r\n    searchBooks = (query) => {\r\n        if (this.state.query) {\r\n            BooksAPI.search(query).then(books => {\r\n                if (books.length > 0) {\r\n                    let trimmedBooks = books.map(book => { // we need to modify the books we get from the API\r\n                        this.props.ownedBooks.forEach((ownedBook) => { // loop through our already owned books\r\n                            if (book.id === ownedBook.id) { // if we own the book we searched for then give it the same shelf as our owned book\r\n                                book.shelf = ownedBook.shelf;\r\n                            }\r\n                            if (!book.shelf) { // if we don't own the book we searched for then give it a shelf of 'none'\r\n                                book.shelf = 'none';\r\n                            }\r\n                        });\r\n                        return book;\r\n                    })\r\n                    this.setState({ searchedBooks: trimmedBooks, noResult: false })\r\n                } else {\r\n                    this.setState({ searchedBooks: [], noResult: true })\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({ query: '', searchedBooks: [], noResult: false });\r\n        }\r\n    };\r\n\r\n    debounce = (func, wait) => {\r\n        let timeId = null;\r\n        return (...args) => {\r\n            if (timeId) {clearTimeout(timeId);}\r\n            timeId = setTimeout(() => {\r\n                func(...args);\r\n            }, wait)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"searchHeader\">\r\n                    <h2>Search</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search all books\"\r\n                        value={this.state.query}\r\n                        onChange={(e) => this.updateQuery(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"bookShelf\">\r\n                    {(this.state.searchedBooks && this.state.query) &&\r\n                        this.state.searchedBooks.map(book => (<Book book={book} key={book.id} onUpdateShelf={this.updateShelf} />))\r\n                    }\r\n                    {this.state.noResult && (<Message title=\"noResults\" />)}\r\n                    {!this.state.query && (<Message title=\"search\" ownedBooks={this.props.ownedBooks} />)}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport SideMenu from './components/SideMenu'\r\nimport Loader from './components/Loader'\r\nimport BookShelf from './components/BookShelf'\r\nimport Search from './components/Search'\r\n\r\nclass BooksApp extends React.PureComponent {\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBooks();\r\n  }\r\n\r\n  showLoader = () => {\r\n    document.querySelector('.loader').style.display = 'flex';\r\n  };\r\n\r\n  hideLoader = () => {\r\n    document.querySelector('.loader').style.display = 'none';\r\n  };\r\n\r\n  fetchBooks = () => {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books });\r\n      this.hideLoader();\r\n    });\r\n  };\r\n\r\n  updateShelf = (book, shelf) =>  {\r\n    this.showLoader();\r\n    BooksAPI.update(book, shelf).then(() => {\r\n      this.fetchBooks();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <SideMenu />\r\n        <div className=\"main-content\">\r\n          <Route exact path=\"/\" render={() => (\r\n            <React.Fragment>\r\n              <BookShelf title=\"Currently Reading\" shelf=\"currentlyReading\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n              <BookShelf title=\"Want to Read\" shelf=\"wantToRead\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n              <BookShelf title=\"Read\" shelf=\"read\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n            </React.Fragment>\r\n          )} />\r\n          <Route path=\"/reading\" render={() => (\r\n            <BookShelf title=\"Currently Reading\" shelf=\"currentlyReading\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n          )} />\r\n          <Route path=\"/toread\" render={() => (\r\n            <BookShelf title=\"Want to Read\" shelf=\"wantToRead\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n          )} />\r\n          <Route path=\"/read\" render={() => (\r\n            <BookShelf title=\"Read\" shelf=\"read\" books={this.state.books} onUpdateShelf={this.updateShelf} />\r\n          )} />\r\n          <Route path=\"/search\" render={() => (\r\n            <Search ownedBooks={this.state.books} onUpdateShelf={this.updateShelf} />\r\n          )} />\r\n          <Loader />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename=\"/MyReads-Udacity\"><App /></BrowserRouter>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}